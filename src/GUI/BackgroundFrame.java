/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Cursor;
import java.io.File;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import service.BackgroundService;

/**
 *
 * @author ghpm9
 */
public class BackgroundFrame extends javax.swing.JInternalFrame {

    private BackgroundService backgroundService;
    
    private int x,y;

    /**
     * Creates new form BackgroundFrame
     */
    public BackgroundFrame(BackgroundService backgroundService) {
        this.backgroundService = backgroundService;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundChooser = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        backgroundImage = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();

        setTitle("Background");
        setMaximumSize(new java.awt.Dimension(1100, 800));
        setPreferredSize(null);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(905, 655));

        jPanel4.setDoubleBuffered(false);
        jPanel4.setMaximumSize(new java.awt.Dimension(905, 655));
        jPanel4.setMinimumSize(new java.awt.Dimension(905, 655));
        jPanel4.setOpaque(false);
        jPanel4.setPreferredSize(new java.awt.Dimension(905, 655));

        backgroundImage.setIcon(getIconFromBackground());
        backgroundImage.setMaximumSize(new java.awt.Dimension(905, 655));
        backgroundImage.setMinimumSize(new java.awt.Dimension(905, 655));
        backgroundImage.setPreferredSize(new java.awt.Dimension(905, 655));
        backgroundImage.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                backgroundImageMouseDragged(evt);
            }
        });
        backgroundImage.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                backgroundImageMouseWheelMoved(evt);
            }
        });
        backgroundImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backgroundImageMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                backgroundImageMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(backgroundImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(9, 9, 9))
        );

        jScrollPane1.setViewportView(jPanel4);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButton1.setText("Alterar Imagem");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 914, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator1)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Images", "bmp", "jpg", "png");
        File fileTemp = selectFile(filter);
        if (fileTemp != null) {
            String path = fileTemp.getAbsolutePath();
            backgroundService.setImage(path);
            backgroundImage.setIcon(getIconFromBackground());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void backgroundImageMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundImageMousePressed
        // TODO add your handling code here:        
        evt.getComponent().setCursor(new Cursor(Cursor.MOVE_CURSOR));
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_backgroundImageMousePressed

    private void backgroundImageMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundImageMouseReleased
        // TODO add your handling code here:        
        evt.getComponent().setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_backgroundImageMouseReleased

    private void backgroundImageMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundImageMouseDragged
        // TODO add your handling code here:
        int moveX = evt.getX() - x;
        int moveY = evt.getY() - y;        
        x = evt.getX();
        y = evt.getY();
        
        backgroundService.moveX(moveX);
        backgroundService.moveY(moveY);
        
       updateBackgroundLabel();
    }//GEN-LAST:event_backgroundImageMouseDragged

    private void backgroundImageMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_backgroundImageMouseWheelMoved
        // TODO add your handling code here:
        backgroundService.setZoom(evt.getPreciseWheelRotation());
        updateBackgroundLabel();
    }//GEN-LAST:event_backgroundImageMouseWheelMoved

    private void updateBackgroundLabel(){
        backgroundImage.setIcon(getIconFromBackground());
    }
    
    private Icon getIconFromBackground() {
        ImageIcon icon = new ImageIcon(backgroundService.getBackground());

        return icon;
    }

    private File selectFile(FileFilter filter) {
        File fileReturn = null;
        backgroundChooser.setFileFilter(filter);
        int returnVal = backgroundChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File temp = backgroundChooser.getSelectedFile();
            if (filter.accept(temp)) {
                fileReturn = temp;
            }
        }

        return fileReturn;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser backgroundChooser;
    private javax.swing.JLabel backgroundImage;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
